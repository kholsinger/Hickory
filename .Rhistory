f
example("source")
example(source)
try(roxygen2::roxygenize(load_code = SourceDir), silent = TRUE)
pkgbuild::compile_dll()
pkgbuild::compile_dll()
pkgbuild::compile_dll()
pkgbuild::compile_dll()
pkgbuild::compile_dll()
pkgbuild::compile_dll()
setwd("~/Dropbox/My Mac (Joelâ€™s iMac)/Documents/GitHub/Hickory")
pkgbuild::compile_dll()
pkgbuild::compile_dll()
install.packages(rstantools)
install.packages("rstantools")
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
pkgbuild::compile_dll()
roxygen2::roxygenize()
update.packages()
source("f-estimate.R")
source("f-estimate.R")
source("f-estimate.R")
f-estimate(c(25, 50, 25))
source("f_estimate.R")
source("f_estimate.R")
f_estimate(c(25, 50, 25))
f_stan(c(25, 50, 25))
p <- 0.2
f_stan(c(p^2*100, 2*p*(1-p)*100, (1-p)^2*100))
p^2*100
2*p*(1-p)*100
(1-p)^2*100
f_stan(c(4, 32, 64))
fit <- f_stan(c(4, 32, 64))
pairs(fit)
library(shinystan)
launch_shinystan(fit)
library(shinystan)
launch_shinystan(fit)
source("f_estimate.R")
fit <- f_stan(c(4, 32, 64))
source("f_estimate.R")
fit <- f_stan(c(4, 32, 64))
pairs(fit)
source("f_estimate.R")
fit <- f_stan(c(4, 32, 64))
print(fit, digits_summary = 3)
fit <- f_stan(c(50, 0, 50))
print(fit, digits_summary = 3)
fit <- f_stan(c(90, 0, 10))
print(fit, digits_summary = 3)
fit <- f_stan(c(80, 20, 20))
print(fit, digits_summary = 3)
fit <- f_stan(c(80, 20, 0))
pairs(fit)
.2/(0.9*0.1)
p <- (2*80 + 20)/(2*100)
p
x <- c(80, 20, 0)/100
x
f <- 1 - x[2]/(2*p*(1-p))
f
print(fit, digits_summary = 3)
source("f_estimate.R")
fit <- f_stan(c(80, 20, 0))
fit <- f_stan(c(80, 20, 0))
source("f_estimate.R")
fit <- f_stan(c(80, 20, 0))
fit <- f_stan(c(80, 20, 0))
fit <- f_stan(c(80, 20, 0))
source("f_estimate.R")
fit <- f_stan(c(80, 20, 0))
fit <- f_stan(c(80, 20, 0))
source("f_estimate.R")
fit <- f_stan(c(80, 20, 0))
fit <- f_stan(c(80, 20, 0))
print(fit, digits_summary = 3)
install.packages("adegenet")
library(adegenet)
help("adegenet")
nancycats
data("nancycats")
nancycats
tmp <-genind2df(nancycats)
tmp <-genind2genpop(nancycats)
tmp <-genind2df(nancycats)
tmp <-genind2genpop(nancycats)
library(tidyverse)
dat <- read_csv("protea_repens.csv")
head(dat)
sub("2", "1", dat$TP243)[1:5]
dom <- dat
for (i in 2:ncol(dom)) {
dom[ ,i] <- sub("2", "1", dom[ ,i])
}
head(dom)
dom <- dat
loci <- colnames(dom)[-1]
loci
for (locus in loci) {
dom[[locus]] <- sub("2", "1", dom[[locus]])
}
head(dom)
write_csv(dom, path = "dominant_example.csv")
tmp <- read_marker_data("dominant_example.csv")
source("read_data.R")
tmp <- read_marker_data("dominant_example.csv")
tmp <- read_marker_data("dominant_example.csv")
source("read_data.R")
tmp <- read_marker_data("dominant_example.csv")
source("read_data.R")
tmp <- read_marker_data("dominant_example.csv", dominant = TRUE)
source("read_data.R")
tmp <- read_marker_data("dominant_example.csv", dominant = TRUE)
tmp
rm(list=ls())
source("read_data.R")
source("analyze.R")
rm(list=ls())
source("read_data.R")
source("analyze.R")
source("analyze.R")
genos <- read_marker_data("protea_repens.csv")
fit <- analyze_codominant(genos)
genos <- read_marker_data("dominant_example.csv")
fit <- analyze_dominant(genos)
source("analyze.R")
fit <- analyze_dominant(genos)
genos
source("analyze.R")
fit <- analyze_dominant(genos)
dims(genos$n)
dim(genos$n)
source("analyze.R")
fit <- analyze_dominant(genos)
source("diagnose_ess.R")
diagnose_bulk_ess(fit)
source("analyze.R")
source("analyze.R")
source("analyze.R")
source("analyze.R")
fit <- analyze_dominant(genos)
source("analyze.R")
fit <- analyze_dominant(genos)
fit <- analyze_dominant(genos)
launch_shinystan(fit)
library(shinystan)
launch_shinystan(fit)
theta <- seq(0.001, 0.009, by = 0.001)
y <- dbeta(theta, 1, 2)
plot(x, y, typ = "l")
help("plot")
plot(x, y, type = "l")
plot(theta, y, type = "l")
theta <- seq(0.001, 0.999, by = 0.001)
y <- dbeta(theta, 1, 2)
plot(theta, y, type = "l")
source("analyze.R")
source("analyze.R")
fit <- analyze_dominant(genos)
launch_shinystan(fit)
fit <- analyze_dominant(genos, prior_theta = c(3,1))
fit <- analyze_dominant(genos, prior_theta = c(1,1))
fit <- analyze_dominant(genos, prior_theta = c(2,4))
fit <- analyze_dominant(genos, prior_theta = c(2,4), iter = 10000, thin = 5)
expression(f)
expression(beta)
plot(fit)
mcmc_intervals(fit, pars = c("f", "theta"))
help("mcmc_intervals")
mcmc_intervals(fit, pars = c("f", "theta")) + scale_y_discrete(labels = c("f", expression(theta)))
mcmc_intervals(fit, pars = c("f", "theta"))
help("scale_y_discrete")
mcmc_intervals(fit, pars = c("f", "theta"), labels = c("f", expression(theta))
)
help("labs")
help("yaxis_text")
mcmc_intervals(fit, pars = c("f", "theta")) + xaxis_ticks(labels = c("f", expression(theta)))
mcmc_intervals(fit, pars = c("f", "theta")) + xaxis_ticks(label = c("f", expression(theta)))
mcmc_intervals(fit, pars = c("f", "theta")) + xaxis_ticks(element_text = c("f", expression(theta)))
suppressWarnings(mcmc_intervals(fit, pars = c("f", "theta")) + scale_y_discrete(labels = c("f", expression(theta))))
sink(type = "message")
mcmc_intervals(fit, pars = c("f", "theta")) + scale_y_discrete(labels = c("f", expression(theta)))
sink(type = "output")
sink.number()
sink("message.txt", type = message)
sink(file = "message.txt", type = message)
sink_file <- file("message.txt")
sink(sink_file, type = "message")
sink_file <- file("message.txt", open = "wt")
sink(sink_file, type = "message")
mcmc_intervals(fit, pars = c("f", "theta")) + scale_y_discrete(labels = c("f", expression(theta)))
sink()
unlink("message.txt")
mcmc_intervals(fit, pars = c("f", "theta")) + scale_y_discrete(labels = c("f", expression(theta))) + yaxis_text(size = 12)
mcmc_intervals(fit, pars = c("f", "theta")) + scale_y_discrete(labels = c("f", expression(theta))) + yaxis_text(size = 16)
mcmc_intervals(fit, pars = c("f", "theta")) + scale_y_discrete(labels = c("f", expression(theta))) + yaxis_text(size = 16) + xaxis_text(size = 16)
mcmc_intervals(fit, pars = c("f", "theta")) + scale_y_discrete(labels = c("f", expression(theta))) + yaxis_text(size = 16, family = "sans") + xaxis_text(size = 16, family = "sans")
sink()
sink()
sink()
sink.number()
sink()
unlink("message.txt")
source("analyze.R")
logit_prior(list(mean = 0.1, upper = 0.2))
tmp <- logit_prior(list(mean = 0.1, upper = 0.2))
exp(tmp[1])/(1+exp(tmp[1]))
exp(tmp[2])/(1+exp(tmp[2]))
logit(upper)
logit(0.2)
logit(0.2) - logit(0.1)
source("analyze.R")
tmp <- logit_prior(list(mean = 0.1, upper = 0.2))
tmp
exp(tmp[1])/(1+exp(tmp[1]))
exp(tmp[2])/(1+exp(tmp[2]))
source("analyze.R")
tmp <- logit_prior(list(mean = 0.1, upper = 0.2))
tmp
source("analyze.R")
tmp <- logit_prior(list(mean = 0.1, upper = 0.2))
tmp
exp(tmp[1] + 2*tmp[2])/(1 + exp(tmp[1] + 2*tmp[2]))
logit_theta <- rnorm(10000, tmp[1], tmp[2])
theta <- exp(logit_theta)/(1 + logit_theta)
plot(density(theta))
min(theta)
theta <- exp(logit_theta)/(1 + exp(logit_theta))
min(theta)
max(theta)
plot(density(theta))
alpha <- (1-theta)/theta
plot(density(alpha))
mean(alpha)
sd(alpha)
help(rgamma)
var(alpha)
var(alpha)/mean(alpha)
s <- sqrt(var(alpha)/mean(alpha))
a <- mean(alpha)/s
mean(alpha)
a*s
var(alpha)
a*s^2
a*(s^2)
s
s^2
s <- var(alpha)/mean(alpha)
a <- mean(alpha)/s
mean(alpha)
a
s
s*a
var(alpha)
a*s^2
tmp_gamma <- rgamma(10000, shape = a, scale = s)
plot(density(tmp_gamma))
lines(denstiy(tmp), col = "red")
log_alpha <- log(alpha)
plot(density(log_alpha))
mean(log_alpha)
sd(log_alpha)
tmp_lognorm <- rnorm(10000, mean = mean(log_alpha), sd = sd(log_alpha))
plot(density(tmp_lognorm))
theta <- function(alpha) return(1/(1+alpha))
alpha <- function(theta) return((1-theta)/theta)
alpha(1/3)
theta(2)
alpha(1/4)
theta(3)
logit_prior(0.1, 0.2)
sink()
sink()
source("analyze.R")
logit_prior(list(mean = 0.1, upper = 0.2))
theta <- exp(-2.1972246)/(1 + exp(-2.1972246))
theta
(1-theta)/theta
theta <- exp(-2.1972246 + 2*0.4054651)/(1 + exp(-2.1972246 + 2*0.4054651))
theta
(1-theta)/theta
convert <- function(logit_prior) {
theta_mu <- exp(logit_prior[1])/(1 + logit_prior[1])
theta_hi <- exp(logit_prior[1] + 2*logit_prior[2])/(1 + exp(logit_prior[1] + logit_prior[2]))
mean <- log(theta_mu)
sd <- (log(theta_hi) - log(theta_mu))/2.0
return(c(mean, sd))
}
convert(logit_prior(list(mean = 0.1, upper = 0.2)))
logit_prior(list(mean = 0.1, upper = 0.2))
convert(-2, 0.4)
convert(c(-2, 0.4))
convert <- fix()
convert <- function(logit_prior) {
theta_mu <- exp(logit_prior[1])/(1 + exp(logit_prior[1]))
theta_hi <- exp(logit_prior[1] + 2*logit_prior[2])/(1 + exp(logit_prior[1] + logit_prior[2]))
mean <- log(theta_mu)
sd <- (log(theta_hi) - log(theta_mu))/2.0
return(c(mean, sd))
}
convert(logit_prior(list(mean = 0.1, upper = 0.2)))
convert <- function(logit_prior) {
theta_mu <- exp(logit_prior[1])/(1 + logit_prior[1])
theta_hi <- exp(logit_prior[1] + 2*logit_prior[2])/(1 + exp(logit_prior[1] + logit_prior[2]))
mean <- log((1-theta_mu)/theta_mu)
hi <- log((1-theta_hi)/theta_hi)
sd <- (hi - mean)/2.0
return(c(mean, sd))
}
convert(logit_prior(list(mean = 0.1, upper = 0.2)))
convert <- function(logit_prior) {
theta_mu <- exp(logit_prior[1])/(1 + exp(logit_prior[1]))
theta_hi <- exp(logit_prior[1] + 2*logit_prior[2])/(1 + exp(logit_prior[1] + logit_prior[2]))
mean <- log((1-theta_mu)/theta_mu)
hi <- log((1-theta_hi)/theta_hi)
sd <- (hi - mean)/2.0
return(c(mean, sd))
}
convert(logit_prior(list(mean = 0.1, upper = 0.2)))
tmp <- logit_prior(list(mean = 0.1, upper = 0.2))
r_logit_theta <- rnorm(10000, mean = tmp[1], sd = tmp[2])
mean(r_logit_theta)
sd(r_logit_theta)
exp(-2.197993 + 2*0.404482)/(1 + exp(-2.197993 + 2*0.404482))
convert(tmp)
tmp_alpha <- convert(tmp)
r_log_alpha <- rnorm(10000, mean = tmp_alpha[1], sd = tmp_alpha[2])
convert <- function(logit_prior) {
theta_mu <- exp(logit_prior[1])/(1 + exp(logit_prior[1]))
theta_hi <- exp(logit_prior[1] + 2*logit_prior[2])/(1 + exp(logit_prior[1] + logit_prior[2]))
mean <- log((1-theta_mu)/theta_mu)
hi <- log((1-theta_hi)/theta_hi)
sd <- (mean - hi)/2.0
return(c(mean, sd))
}
convert(logit_prior(list(mean = 0.1, upper = 0.2)))
tmp_alpha <- convert(tmp)
r_log_alpha <- rnorm(10000, mean = tmp_alpha[1], sd = tmp_alpha[2])
mean(r_log_alpha)
sd(tmp_alpha)
mean(r_log_alpha)
sd(r_log_alpha)
invlogit <- function(x) return(exp(x)/(1 + exp(x)))
r_theta <- invlogit(r_logit_theta)
r_alpha <- exp(r_log_alpha)
r_theta_alpha <- (1/(1+r_alpha))
library(ggplot2)
library(tidyverse)
for_plot <- tibble(Source = c(rep("Theta", length(r_theta)), rep("Alpha", length(r_theta_alpha))),)
for_plot <- tibble(Source = c(rep("Theta", length(r_theta)), rep("Alpha", length(r_theta_alpha))),
Theta = c(r_theta, r_theta_alpha))
p <- ggplot(for_plot, aes(x = Theta), color = Source) + geom_line(stat = "density")
print(p)
p <- ggplot(for_plot, aes(x = Theta, color = Source)) + geom_line(stat = "density")
print(p)
convert
source("read_data.R")
source("analyze.R")
rm(list=ls())
source("read_data.R")
source("analyze.R")
genos <- read_marker_data("dominant_example.csv")
fit <- analyze_dominant(genos)
fit <- analyze_dominant(genos)
library(shinystan)
launch_shinystan(fit)
fit <- analyze_dominant(genos)
source("analyze.R")
fit <- analyze_dominant(genos)
genos <- read_marker_data("protea_repens.csv")
source("analyze.R")
fit <- analyze_codominant(genos)
fit <- analyze_codominant(genos)
genos <- read_marker_data("dominant_example.csv")
fit <- analyze_dominant(genos)
fit <- analyze_dominant(genos, chains = 1, iter = 200)
fit <- analyze_dominant(genos, chains = 1, iter = 200)
fit <- analyze_dominant(genos, chains = 1)
help("stan")
sink()
sink()
sink()
sink()
sink()
sink()
library(rstan)
help(stan)
source("read_data.R")
source("analyze.R")
genos <- read_marker_data("dominant_example.csv")
fit <- analyze_dominant(genos)
fit <- analyze_dominant(genos)
fit <- analyze_dominant(genos, chains = 1, iter = 200)
fit <- analyze_dominant(genos, chains = 1, iter = 200)
fit <- analyze_dominant(genos, chains = 1, iter = 200)
fit <- analyze_dominant(genos)
